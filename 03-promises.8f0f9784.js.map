{"mappings":"khBAAA,IAAMA,EAAOC,SAASC,cAAc,QAiBpC,SAASC,EAAcC,EAAUC,GAC/BC,QAAQC,IAAIC,OAAOR,EAAKS,SAASJ,MAAMK,QACvCJ,QAAQC,IAAIC,OAAOR,EAAKS,SAASE,KAAKD,QAEtCL,EAAQL,EAAKS,SAASJ,MAAMK,MAE5BJ,QAAQC,IAAIF,GACZO,OAASZ,EAAKS,SAASG,OAAOF,MAC9BN,EAAW,EAEX,IADA,IAAMS,EAAgBC,KAAKC,SAAW,GAC/BX,EAAWQ,QACfI,YAAW,WACRH,EACFP,QAAQC,IAAI,uBAAwCU,OAAfb,EAAS,QAAYa,OAANZ,EAAM,OAExDC,QAAMC,IAAI,sBAAuCU,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,GAEtDA,GACLD,GAAY,C,CAgBhB,OAhDAJ,EAAKkB,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAIC,iBAGJ,IAEcC,EAAVF,EAAIG,OADNb,SAAYJ,EAAKgB,EAALhB,MAAOM,EAAIU,EAAJV,KAAMC,EAAMS,EAANT,OAE3BN,QAAQC,IAAIF,EAAMK,MAAOC,EAAKD,MAAOE,EAAOF,OAC9CP,G,IAsCO,IAAIoB,SAAQ,SAACC,EAASC,GAAW,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('form');\n\n\nform.addEventListener('submit', handleInput);\n\nfunction handleInput(evt) {\n  evt.preventDefault();\n  \n\n  const {\n    elements: { delay, step, amount}\n  } = evt.target;\n  console.log(delay.value, step.value, amount.value);\ncreatePromise();\n};\n\n\nfunction createPromise(position, delay) {\n  console.log(Number(form.elements.delay.value));\n  console.log(Number(form.elements.step.value));\n\n  delay = form.elements.delay.value;\n  // delay = form.elements.delay.value + form.elements.step.value * position;\n  console.log(delay);\n  amount = form.elements.amount.value;\n  position = 0;\n  const shouldResolve = Math.random() > 0.3;\n  while (position < amount) {\n     setTimeout(() => {\n    if (shouldResolve) {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n     },  delay);\n    position += 1;\n  }\n \n  \n}\n\n\n// let counter = 0;\n\n// while (counter < 10) {\n//   console.log(\"counter: \", counter);\n//   counter += 1;\n// }\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\nreturn new Promise((resolve, reject) => { \n\n});\n\n//   position = amount.value;\n//   delay = delayStep.value;\n//   console.log(firstDelay.value);\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["form","document","querySelector","createPromise","position","delay","console","log","Number","elements","value","step","amount","shouldResolve","Math","random","setTimeout","concat","addEventListener","evt","preventDefault","_elements","target","Promise","resolve","reject"],"version":3,"file":"03-promises.8f0f9784.js.map"}