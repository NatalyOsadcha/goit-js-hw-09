{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAmCpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA3CPL,EAAKa,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAIC,iBAEJ,IAEcC,EAAVF,EAAIG,OADNC,SAAYb,EAAKW,EAALX,MAAOc,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAE3BC,QAAQC,IAAIjB,EAAMkB,MAAOJ,EAAKI,MAAOH,EAAOG,OAM5C,IAJA,IAAIC,EAAUC,OAAOzB,EAAKkB,SAASb,MAAMkB,OACrCG,EAASD,OAAOzB,EAAKkB,SAASC,KAAKI,OACnCI,EAAWF,OAAOzB,EAAKkB,SAASE,OAAOG,OAElCK,EAAW,EAAGA,GAAYD,EAAUC,IAC3CP,QAAQC,IAAIE,GAEZrB,EAAcyB,EAAUJ,GACrBK,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAU2B,EAAOD,EAAPC,Q,OACjBC,EAAAlC,GAASmC,OAAOC,QACd,uBAAwCC,OAAf/B,EAAS,QAAc+B,OAARJ,EAAQ,M,IAGnDK,OAAM,SAAAN,G,IAAG1B,EAAQ0B,EAAR1B,SAAU2B,EAAOD,EAAPC,Q,OAClBC,EAAAlC,GAASmC,OAAOI,QACd,sBAAqCF,OAAf/B,EAAS,QAAc+B,OAARJ,EAAQ,M,IAGlDP,GAAWE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', handleInput);\n\nfunction handleInput(evt) {\n  evt.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = evt.target;\n  console.log(delay.value, step.value, amount.value);\n\n  let delayPr = Number(form.elements.delay.value);\n  let stepPr = Number(form.elements.step.value);\n  let amountPr = Number(form.elements.amount.value);\n\n  for (let position = 1; position <= amountPr; position++) {\n    console.log(delayPr);\n  \n    createPromise(position, delayPr)\n      .then(({ position, delayPr }) =>\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delayPr}ms`\n        ) \n      )\n      .catch(({ position, delayPr }) =>\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delayPr}ms`\n        )\n    );\n     delayPr += stepPr;\n  }\n  // evt.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","_elements","target","elements","step","amount","console","log","value","delayPr1","Number","stepPr","amountPr","position1","then","param","delayPr","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.9f43d18d.js.map"}